cmake_minimum_required(VERSION 3.10)

project(day{day})

# Get parent directory name
get_filename_component(year ../ ABSOLUTE)
get_filename_component(year "${{year}}" NAME)

# Get root directory
include_directories(${{CMAKE_SOURCE_DIR}})

# Set sources to be compiled
set( SOURCES "cpp/solutions.cpp" )
add_library(${{year}}-${{PROJECT_NAME}} OBJECT ${{SOURCES}})

add_custom_target( ${{year}}-${{PROJECT_NAME}}-data
    COMMAND ${{CMAKE_COMMAND}} -E copy_directory ${{CMAKE_CURRENT_SOURCE_DIR}}/data ${{CMAKE_CURRENT_BINARY_DIR}}/data
)

# Compile the sources
set( MAIN_SOURCES "cpp/main.cpp")
add_executable ( ${{year}}-${{PROJECT_NAME}}-main ${{MAIN_SOURCES}})
add_dependencies( ${{year}}-${{PROJECT_NAME}}-main ${{year}}-${{PROJECT_NAME}}-data)
set_target_properties( ${{year}}-${{PROJECT_NAME}}-main PROPERTIES OUTPUT_NAME "main")

# Link potential libraries
target_link_libraries(${{year}}-${{PROJECT_NAME}}-main ${{year}}-${{PROJECT_NAME}})

# Build tests
set( TEST_SOURCES "cpp/test.cpp")
set ( TEST_TARGET ${{year}}-${{PROJECT_NAME}}-test)

# Test exectuable
add_executable (${{TEST_TARGET}} ${{TEST_SOURCES}})
target_link_libraries(${{TEST_TARGET}} gtest gtest_main ${{year}}-${{PROJECT_NAME}})
set_target_properties(${{TEST_TARGET}} PROPERTIES EXCLUDE_FROM_ALL TRUE)

# Set up test
add_test( ${{PROJECT_NAME}}_${{year}}_test ${{TEST_TARGET}})
add_dependencies(build_tests ${{TEST_TARGET}})
set_target_properties( ${{year}}-${{PROJECT_NAME}}-test PROPERTIES OUTPUT_NAME "test")